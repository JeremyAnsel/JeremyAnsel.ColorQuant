{"name":"JeremyAnsel.ColorQuant","tagline":"A .Net color quantizer based on Xiaolin Wu's Color Quantizer.","body":"# JeremyAnsel.ColorQuant\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/u39upbktebxs5hwn/branch/master?svg=true)](https://ci.appveyor.com/project/JeremyAnsel/jeremyansel-colorquant/branch/master)\r\n\r\n[![NuGet Version](https://img.shields.io/nuget/v/JeremyAnsel.ColorQuant.svg)](https://www.nuget.org/packages/JeremyAnsel.ColorQuant)\r\n[![NuGet Status](http://nugetstatus.com/JeremyAnsel.ColorQuant.png)](http://nugetstatus.com/packages/JeremyAnsel.ColorQuant)\r\n\r\nJeremyAnsel.ColorQuant is a C# implementation of the Xiaolin Wu's Color Quantizer (v. 2).\r\nFor a given 32-bit RGB or ARGB image, it will produce a 8-bit palletized image.\r\n\r\nDescription     | Value\r\n----------------|----------------\r\nLicense         | [The MIT License (MIT)](https://github.com/JeremyAnsel/JeremyAnsel.ColorQuant/blob/master/LICENSE.txt)\r\nWeb site        | http://jeremyansel.github.io/JeremyAnsel.ColorQuant\r\nDocumentation   | http://jeremyansel.github.io/JeremyAnsel.ColorQuant/doc\r\nSource code     | https://github.com/JeremyAnsel/JeremyAnsel.ColorQuant\r\nNuget           | https://www.nuget.org/packages/JeremyAnsel.ColorQuant\r\nBuild           | https://ci.appveyor.com/project/JeremyAnsel/jeremyansel-colorquant/branch/master\r\n\r\nC Implementation of Xiaolin Wu's Color Quantizer (v. 2) (see Graphics Gems volume II, pages 126-133) : http://www.ece.mcmaster.ca/~xwu/cq.c.\r\n\r\n> Algorithm: Greedy orthogonal bipartition of RGB space for variance minimization aided by inclusion-exclusion tricks. For speed no nearest neighbor search is done. Slightly better performance can be expected by more sophisticated but more expensive versions.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}